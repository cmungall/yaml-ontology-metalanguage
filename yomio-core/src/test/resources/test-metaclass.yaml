pattern_name: test

vars:
  slotA: "'Thing'"
  slotB: "'Thing'"

name:
  text: "%s of %s"
  vars:
    - slotA
    - slotB

equivalentTo:
  text: "%s and 'part of' some %s"
  vars:
    - slotA
    - slotB

def:
  text: "Something that is both an %s and an %s"
  vars:
    - slotA
    - slotB

gcis:
  -
    text: "(%s and 'part of' some %s) SubClassOf: (%s and 'has part' some %s)"
    vars:
      - slotA
      - slotB
      - slotB
      - slotA
    
